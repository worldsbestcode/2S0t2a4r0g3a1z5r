"""
@file      kmes/kmes_translators.py
@author    Aaron Perez (aperez@futurex.com)

@section LICENSE

This program is the property of Futurex, L.P.

No disclosure, reproduction, or use of any part thereof may be made without
express written permission of Futurex L.P.

Copyright by:  Futurex, LP. 2020

@section DESCRIPTION
A mapping of KMES translators to be used in translator_factory.py
"""

from .translators import (
    approval_groups,
    approval_requests,
    certificate_signing,
    certificates,
    crls,
    crypto,
    dn_profiles,
    extension_profiles,
    features,
    gcse_translators,
    identities,
    issuance_policies,
    key_groups,
    keys,
    login,
    object_signing,
    pki_generation,
    pki_trees,
    roles,
    shared,
    system,
    tlsprofiles,
    token_profiles,
    user_groups,
    users,
    web_server,
)


def map_translators():
    return {
        "Login": {"Submit": login.LoginSubmit},
        "ApprovalGroups": {
            "Create": approval_groups.CreateApprovalGroup,
            "List": approval_groups.ListApprovalGroups,
            "Retrieve": approval_groups.RetrieveApprovalGroup,
            "Update": approval_groups.UpdateApprovalGroup,
            "Delete": approval_groups.DeleteApprovalGroup,
            "RetrievePermissions": approval_groups.RetrieveApprovalGroupPermissions,
            "UpdatePermissions": approval_groups.UpdateApprovalGroupPermissions,
        },
        "ApprovalRequests": {
            "ListRequests": approval_requests.ListApprovalRequests,
            "DeleteRequest": approval_requests.DeleteApprovalRequest,
            "ApproveDenyRequest": approval_requests.ApproveDenyApprovalRequest,
            "Renew": approval_requests.RenewRequest,
            "Revoke": approval_requests.RevokeRequest,
            "CreateObjSigningRequest": object_signing.CreateObjSigningRequest,
            "ListObjSigningRequests": object_signing.ListObjSigningRequests,
            "RetrieveObjSigningRequest": object_signing.RetrieveObjSigningRequest,
            "UpdateObjSigningRequest": object_signing.UpdateObjSigningRequest,
            "CreatePkiGenerationRequest": pki_generation.CreatePkiGenerationRequest,
            "ListPkiGenerationRequests": pki_generation.ListPkiGenerationRequests,
            "RetrievePkiGenerationRequest": pki_generation.RetrievePkiGenerationRequest,
            "UpdatePkiGenerationRequest": pki_generation.UpdatePkiGenerationRequest,
            "CreateCertSigningRequest": certificate_signing.CreateCertSigningRequest,
            "ListCertSigningRequests": certificate_signing.ListCertSigningRequests,
            "RetrieveCertSigningRequest": certificate_signing.RetrieveCertSigningRequest,
            "UpdateCertSigningRequest": certificate_signing.UpdateCertSigningRequest,
        },
        "Certificates": {
            "CreateAlias": certificates.CreateAlias,
            "ListAliases": certificates.ListAliases,
            "DeleteAlias": certificates.DeleteAlias,
            "CreateX509": certificates.CreateX509,
            "RetrieveCert": certificates.RetrieveCertificate,
            "Delete": certificates.DeleteCertificate,
            "ArchiveRestore": certificates.ArchiveRestore,
            "Export": certificates.ExportCertificate,
            "GenerateEmvCert": certificates.GenerateEmvCert,
            "ImportEMV": certificates.ImportEMV,
            "ImportX509": certificates.ImportX509,
            "RetrievePermissions": certificates.RetrieveCertPermissions,
            "UpdatePermissions": certificates.UpdateCertPermissions,
        },
        "CRLs": {
            "Create": crls.CreateCrl,
            "Retrieve": crls.RetrieveCrl,
            "Update": crls.UpdateCrl,
            "Delete": crls.DeleteCrl,
            "Export": crls.ExportCrl,
            "Import": crls.ImportCrl,
            "Revoke": crls.RevokeCert,
        },
        "Crypto": {
            "Encrypt": crypto.Encrypt,
            "Decrypt": crypto.Decrypt,
            "RsaDecrypt": crypto.RsaDecrypt,
            "RsaEncrypt": crypto.RsaEncrypt,
            "RsaSign": crypto.RsaSign,
            "RsaVerify": crypto.RsaVerify,
            "EccDecrypt": crypto.EccDecrypt,
            "EccEncrypt": crypto.EccEncrypt,
            "EccSign": crypto.EccSign,
            "EccVerify": crypto.EccVerify,
            "Random": crypto.Random,
        },
        "DNProfiles": {
            "Retrieve": dn_profiles.RetrieveDNProfile,
        },
        "ExtensionProfiles": {
            "Create": extension_profiles.CreateX509ExtensionProfile,
            "List": extension_profiles.ListX509ExtensionProfiles,
            "Retrieve": extension_profiles.RetrieveX509ExtensionProfile,
            "Update": extension_profiles.UpdateX509ExtensionProfile,
            "Delete": extension_profiles.DeleteX509ExtensionProfile,
            "RetrievePermissions": extension_profiles.RetrieveX509ExtensionPermissions,
            "UpdatePermissions": extension_profiles.UpdateX509ExtensionPermissions,
        },
        "GoogleCSE": {
            "GCSEWrap": gcse_translators.GCSEWrapTranslator,
            "GCSEUnwrap": gcse_translators.GCSEUnwrapTranslator,
        },
        "Identities": {
            "Create": identities.CreateIdentity,
            "List": identities.ListIdentities,
            "Retrieve": identities.RetrieveIdentity,
            "Update": identities.UpdateIdentity,
            "Delete": identities.DeleteIdentity,
        },
        "IssuancePolicies": {
            "Create": issuance_policies.CreateIssuancePolicy,
            "List": issuance_policies.ListIssuancePolicies,
            "Retrieve": issuance_policies.RetrieveIssuancePolicy,
            "Update": issuance_policies.UpdateIssuancePolicy,
            "Delete": issuance_policies.DeleteIssuancePolicy,
        },
        "KeyGroups": {
            "List": key_groups.ListKeyGroups,
            "Move": key_groups.MoveKeyGroup,
            "RetrievePermissions": key_groups.RetrieveKeyGroupPermissions,
            "UpdatePermissions": key_groups.UpdateKeyGroupPermissions,
        },
        "KeyFolders": {
            "Create": key_groups.CreateKeyFolder,
            "Retrieve": key_groups.RetrieveKeyGroup,
            "Update": key_groups.UpdateKeyFolder,
            "Delete": key_groups.DeleteKeyGroup,
        },
        "KeyStores": {
            "Retrieve": key_groups.RetrieveKeyGroup,
            "Update": key_groups.UpdateKeyFolder,
            "Delete": key_groups.DeleteKeyGroup,
            "Rotate": key_groups.RotateKeyStore,
        },
        "Keys": {
            "CreateRandomKey": keys.CreateRandomKey,
            "CreateRandomProtectedKey": keys.CreateRandomProtectedKey,
            "ExportSymmetric": keys.ExportSymmetricKey,
            "ExportSymmetricProtected": keys.ExportSymmetricProtectedKey,
            "DeleteSymmetric": keys.DeleteTrustedKey,
            "DeleteSymmetricProtected": keys.DeleteProtectedKey,
            "Import": keys.ImportKey,
            "RetrieveSymmetricProtected": keys.RetrieveSymmetricProtectedKeyGroup,
        },
        "PKITrees": {
            "Create": pki_trees.CreatePKITree,
            "List": pki_trees.ListPKITrees,
            "Retrieve": pki_trees.RetrievePKITree,
            "Update": pki_trees.UpdatePKITree,
            "Delete": pki_trees.DeletePKITree,
            "RetrievePermissions": pki_trees.RetrievePKITreePermissions,
            "UpdatePermissions": pki_trees.UpdatePKITreePermissions,
        },
        "TokenProfiles": {
            "Create": token_profiles.CreateTokenProfile,
            "List": token_profiles.ListTokenProfiles,
            "Retrieve": token_profiles.RetrieveTokenProfile,
            "Update": token_profiles.UpdateTokenProfiles,
            "Delete": token_profiles.DeleteTokenProfile,
            "RetrievePermissions": token_profiles.RetrievePermissions,
            "UpdatePermissions": token_profiles.UpdatePermissions,
            "Tokenize": token_profiles.Tokenize,
            "Detokenize": token_profiles.Detokenize,
        },
        "UserGroups": {
            "Create": user_groups.CreateUserGroup,
            "List": user_groups.ListUserGroups,
            "Retrieve": user_groups.RetrieveUserGroup,
            "Update": user_groups.UpdateUserGroup,
            "Delete": user_groups.DeleteUserGroup,
            "Move": user_groups.MoveUserGroup,
        },
        "Users": {
            "Create": users.CreateUser,
            "List": users.ListUsers,
            "Retrieve": users.RetrieveUser,
            "Delete": users.DeleteUser,
            "Update": users.UpdateUser,
            "Move": users.MoveUser,
            "SetPassword": users.SetUserPassword,
        },
        "WebServer": {
            "Retrieve": web_server.Retrieve,
            "Update": web_server.Update,
            "RestartWebserver": web_server.RestartWebserver,
        },
        "Misc": {
            "GetPermissionDescriptions": shared.PermissionDescriptionTranslator,
        },
        "Roles": {
            "Create": roles.CreateRole,
            "List": roles.ListRoles,
            "Retrieve": roles.RetrieveRole,
            "Update": roles.UpdateRole,
            "Delete": roles.DeleteRole,
        },
        "TlsProfiles": {
            "Create": tlsprofiles.CreateTlsProfile,
            "List": tlsprofiles.ListTlsProfiles,
            "Retrieve": tlsprofiles.RetrieveTlsProfile,
            "Update": tlsprofiles.UpdateTlsProfile,
            "Delete": tlsprofiles.DeleteTlsProfile,
        },
        "System": {
            "RetrieveAutoBackup": system.RetrieveAutoBackup,
            "UpdateAutoBackup": system.UpdateAutoBackup,
            "RetrieveCertificates": system.RetrieveCertificates,
            "UpdateCertificates": system.UpdateCertificates,
            "RetrieveGlobalPermissions": system.RetrieveGlobalPermissions,
            "UpdateGlobalPermissions": system.UpdateGlobalPermissions,
            "RetrieveNtp": system.RetrieveNtp,
            "UpdateNtp": system.UpdateNtp,
            "RetrieveRaSettings": system.RetrieveRaSettings,
            "UpdateRaSettings": system.UpdateRaSettings,
            "RetrieveSecureMode": system.RetrieveSecureMode,
            "UpdateSecureMode": system.UpdateSecureMode,
        },
        "Features": {
            "Retrieve": features.RetrieveFeatures,
        },
    }
