openapi: 3.0.0

info:
  version: "1.0.2"
  title: 'Web Server'
  description: |
    ***
    ### Authentication Methods
    ***
    + HTTP Bearer token (JSON web token)
    + XSRF Session token
    ***
    ### Important Notes
    ***
    + 

security:
  - bearerToken: []
  - session: []
    XSRF-TOKEN: []

paths:
  '/web-server':
    get:
      tags:
        - Web Server
      summary: 'Retrieve Web Server settings'
      description: |
        ***
        ### Requirements
        ***
        + **Features**
          + 
        + **Host API Commands**
          + SETT, FN web
        + **Permissions**
          +
        ***
        ### Additional Notes
        ***
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveWebSettings'
              examples:
                'Retrieve Web Server settings':
                  $ref: '#/components/examples/RetrieveWebSettings'
        '400':
          $ref: '#/components/responses/400-BadRequest'
        '401':
          $ref: '#/components/responses/401-Unauthorized'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-NotFound'
        default:
          $ref: '#/components/responses/500-InternalError'

    put:
      tags:
        - Web Server
      summary: 'Update Web Server settings'
      description: |
        ***
        ### Requirements
        ***
        + **Features**
          + 
        + **Host API Commands**
          + SETT, FN web
        + **Permissions**
          +
        ***
        ### Additional Notes
        ***
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebSettings'
            examples:
              'Update Web Server settings (example 1)':
                $ref: '#/components/examples/UpdateWebSettings1'
              'Update Web Server settings (example 2)':
                $ref: '#/components/examples/UpdateWebSettings2'
      responses:
        '200':
          $ref: '#/components/responses/200-OK'
        '400':
          $ref: '#/components/responses/400-BadRequest'
        '401':
          $ref: '#/components/responses/401-Unauthorized'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-NotFound'
        default:
          $ref: '#/components/responses/500-InternalError'
  '/web-server/restart':
    post:
      tags:
        - Web Server
      summary: 'Restart Web Server'
      description: |
        ***
        ### Requirements
        ***
        + **Features**
          + 
        + **Host API Commands**
          + SETT, FN web
        + **Permissions**
          +
        ***
        ### Additional Notes
        ***
        + Restarting the webserver will restart **all** web services.
          This will cause temporary down-time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartWebServer'
            examples:
              'Restart Web Server':
                $ref: '#/components/examples/RestartWebserver'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestartWebServerResponse'
              examples:
                'Restart Web Server':
                  $ref: '#/components/examples/RestartWebServerResponse'
        '400':
          $ref: '#/components/responses/400-BadRequest'
        '401':
          $ref: '#/components/responses/401-Unauthorized'
        '403':
          $ref: '#/components/responses/403-Forbidden'
        '404':
          $ref: '#/components/responses/404-NotFound'
        default:
          $ref: '#/components/responses/500-InternalError'

components:
  securitySchemes:
    bearerToken:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/securitySchemes/bearerToken'
    session:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/securitySchemes/session'
    XSRF-TOKEN:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/securitySchemes/XSRF-TOKEN'

  schemas:
    RetrieveWebSettings:
      allOf:
        - $ref: '#/components/schemas/ResponseBase'
        - type: object
          properties:
            response:
              allOf:
                - $ref: '#/components/schemas/BareWebSettings'
                - required:
                  - enabled
                  - hostname
                  - remoteSessions
    UpdateWebSettings:
      $ref: '#/components/schemas/BareWebSettings'
    RestartWebServer:
      type: object
      properties:
        restart:
          type: boolean
          default: true
      required:
        - restart
    RestartWebServerResponse:
      $ref: '#/components/schemas/ResponseBase'
    BareWebSettings:
      type: object
      properties:
        enabled:
          type: boolean
        hostname:
          type: string
        remoteSessions:
          type: integer
          minimum: 1
          maximum: 10
    ResponseBase:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/schemas/ResponseBase'

  responses:
    200-OK:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/200-OK'
    201-Created:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/201-Created'
    400-BadRequest:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/400-BadRequest'
    401-Unauthorized:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/401-Unauthorized'
    403-Forbidden:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/403-Forbidden'
    404-NotFound:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/404-NotFound'
    500-InternalError:
      $ref: 'https://api.swaggerhub.com/domains/Futurex/common/1.0.0#/components/responses/500-InternalError'

  examples:
    RetrieveWebSettings:
      value:
        status: 'Success'
        message: ''
        response:
          enabled: true
          hostname: 'https://kmes1.futurex.com:8088'
          remoteSessions: 5
    UpdateWebSettings1:
      value:
        hostname: 'https://kmes1.futurex.com:8090'
        remoteSessions: 10
    UpdateWebSettings2:
      value:
        enabled: false
    RestartWebserver:
      value: {}
    RestartWebServerResponse:
      value:
        status: 'Success'
        message: 'Web Server successfully restarted'
