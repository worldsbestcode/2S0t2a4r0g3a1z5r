# Intercept uWSGI errors and serves our own error pages
uwsgi_intercept_errors on;


# If they come here using HTTP, bounce them to the correct scheme
error_page 497 https://$host:$server_port$request_uri;


# Invalid client request
error_page 495 496 /badrequest.html;
location = /badrequest.html {
    internal;
    root /var/www/error;

    # Any scope that adds a header overrides previous ones
    include /etc/nginx/static_headers.conf;
    add_header Status-Code $status always;
}


# Unsupported client request
error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 423 424 426 428 429 431 451 /40x.html;
location = /40x.html {
    internal;
    root /var/www/nginx;

    # Any scope that adds a header overrides previous ones
    include /etc/nginx/static_headers.conf;
    add_header Status-Code $status always;
}


# Unauthorized client request
error_page 401 /unauthorized.html;
location = /unauthorized.html {
    internal;
    root /var/www/nginx;

    # Any scope that adds a header overrides previous ones
    include /etc/nginx/static_headers.conf;
    add_header Status-Code $status always;
}


# Server error
error_page 500 501 502 503 504 505 506 507 508 510 511 /50x.html;
location = /50x.html {
    internal;
    root /var/www/nginx;

    # Any scope that adds a header overrides previous ones
    include /etc/nginx/static_headers.conf;
    add_header Status-Code $status always;
}


# Error pages static content
location ^~ /er/ {
    rewrite ^/er/(.*)$ /$1;
    root /var/www/nginx;
    break;
}
